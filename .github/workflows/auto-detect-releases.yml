name: Auto-Detect New Bruno Releases

on:
  schedule:
    # Check for new releases every day at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:
  check-new-release:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.check.outputs.new-version }}
      should-update: ${{ steps.check.outputs.should-update }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Check for new Bruno release
      id: check
      run: |
        # Get latest release from Bruno repo
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/usebruno/bruno/releases/latest | jq -r '.tag_name' | sed 's/v//')

        # Get current version from nuspec
        CURRENT_VERSION=$(grep -oP '<version>\K[^<]+' bruno.nuspec)

        echo "Latest Bruno version: $LATEST_RELEASE"
        echo "Current package version: $CURRENT_VERSION"

        # Compare versions
        if [ "$LATEST_RELEASE" != "$CURRENT_VERSION" ]; then
          echo "New version detected!"
          echo "new-version=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          echo "should-update=true" >> $GITHUB_OUTPUT
        else
          echo "No new version found"
          echo "should-update=false" >> $GITHUB_OUTPUT
        fi

  trigger-update:
    needs: check-new-release
    if: needs.check-new-release.outputs.should-update == 'true'
    runs-on: ubuntu-latest

    steps:
    - name: Trigger package update workflow
      uses: actions/github-script@v7
      with:
        script: |
          const newVersion = "${{ needs.check-new-release.outputs.new-version }}";

          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'update-chocolatey.yml',
            ref: 'main',
            inputs: {
              version: newVersion,
              push_to_chocolatey: 'false'  // Set to true if you want auto-push
            }
          });

          console.log(`Triggered update for Bruno v${newVersion}`);

    - name: Create Issue for New Release
      uses: actions/github-script@v7
      with:
        script: |
          const newVersion = "${{ needs.check-new-release.outputs.new-version }}";

          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `New Bruno release v${newVersion} detected`,
            body: `A new Bruno release v${newVersion} has been detected.

          **Actions taken:**
          - ✅ Triggered automatic package update workflow
          - ⏳ Package update workflow is running

          **Next steps:**
          1. Review the generated PR when workflow completes
          2. Test the package locally if needed
          3. Merge the PR to update the package
          4. Manually push to Chocolatey if auto-push is disabled

          **Links:**
          - [Bruno Release](https://github.com/usebruno/bruno/releases/tag/v${newVersion})
          - [Workflow Runs](https://github.com/${context.repo.owner}/${context.repo.repo}/actions)
          `,
            labels: ['auto-detected', 'new-release']
          });